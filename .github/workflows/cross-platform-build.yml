name: Cross platform build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  
jobs:
  build:
    runs-on: ${{ matrix.build.os }}
    strategy:
      fail-fast: false
      matrix:
        build: 
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Configure CMake
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cmake -S . -B "$(cygpath -u "${{ steps.strings.outputs.build-output-dir }}")" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          else
            cmake -S . -B ${{ steps.strings.outputs.build-output-dir }} \
              -DCMAKE_C_COMPILER=${{ matrix.build.c_compiler }} \
              -DCMAKE_CXX_COMPILER=${{ matrix.build.cpp_compiler }} \
              -DCMAKE_BUILD_TYPE=Release
          fi

      - name: Build
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cmake --build "$(cygpath -u "${{ steps.strings.outputs.build-output-dir }}")" --config Release
          else
            cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release
          fi

      - name: Run monitor.py
        shell: bash
        run: |
          python3 monitor.py --duration 15
